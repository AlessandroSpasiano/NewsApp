plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id "kotlin-android-extensions"
}

apply plugin: "kotlin-kapt"
android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolVersion

    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

        debug {
            debuggable true
        }

        staging {
            initWith debug
            matchingFallbacks = ["debug"]
        }
    }

    testBuildType = "staging"

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = "1.8"
    }

    sourceSets {
        staging {
            java {
                srcDirs 'src\\staging\\java'
            }
        }
    }
}

dependencies {
    implementation project(path: ':mvvm-library')
    implementation "org.jetbrains.kotlin:kotlin-stdlib:${kotlinVersion}"
    implementation "androidx.core:core-ktx:${androidxCoreKtxVersion}"
    //Retrofit
    implementation "com.squareup.retrofit2:retrofit:${retrofitVersion}"
    implementation "com.squareup.retrofit2:converter-gson:${retrofitVersion}"

    implementation "com.squareup.okhttp3:logging-interceptor:${loggingVersion}"

    //Google
    implementation "com.google.code.gson:gson:${gsonVersion}"

    // Coroutine kotlin
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:${coroutineAndroidVersion}"

    // Dagger
    implementation "com.google.dagger:dagger:${daggerVersion}"
    kapt "com.google.dagger:dagger-compiler:${daggerVersion}"
}